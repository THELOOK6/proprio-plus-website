---
import { getCollection } from 'astro:content';
import { propertiesSetting } from '../../data/config';
import PaginatedBlogLayout from '../../components/blog/PaginatedBlogLayout.astro';
export const prerender = true;

// Get static paths for all possible pages
export async function getStaticPaths() {
    const allPosts = await getCollection('properties');

    // Filter posts
    const filteredPosts = allPosts.filter((post) => {
        return import.meta.env.DEV || post.data.publish !== false;
    });

    // Sort posts by date
    //const sortedPosts = filteredPosts.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

    const totalPosts = filteredPosts.length;
    const totalPages = Math.ceil(totalPosts / propertiesSetting.postsPerPage);

    // Create paths for all pages except page 1 (which is handled by index.astro)
    return Array.from({ length: totalPages - 1 }, (_, i) => {
        const page = i + 2; // Start from page 2
        const start = (page - 1) * propertiesSetting.postsPerPage;
        const end = start + propertiesSetting.postsPerPage;

        return {
            params: { page: String(page) },
            props: {
                page,
                totalPages,
                posts: filteredPosts.slice(start, end),
            },
        };
    });
}

const { page, totalPages, posts } = Astro.props;

// Redirect page 1 to the main blog page
if (page === 1) {
    return Astro.redirect('/blog');
}
---

<PaginatedBlogLayout
    {posts}
    currentPage={page}
    {totalPages}
    baseUrl="/properties"
    title="Properties"
    subtitle="Current Available Properties"
/>

