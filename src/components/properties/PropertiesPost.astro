---
import { categories } from '../../data/categories';
import HashtagCategory from '../ui/HashtagCategory.astro';
import { Image } from 'astro:assets';

interface Props {
    title: string;
    excerpt: string;
    featuredImage: any;
    categories: string[];
    slug?: string;
    index: number;
    rent: number;
    propertyId: string[];
    bedrooms: number;
    bathrooms: number;
    rooms: number;
    sqft: number;
    address: string;
    agent?: {
        name: string;
        image?: string;
    };
    yearBuilt: number;
}

const {
    title,
    categories: postCategories,
    excerpt,
    featuredImage,
    slug,
    index,
    rent,
    propertyId,
    bedrooms,
    bathrooms,
    rooms,
    sqft,
    address,
    agent,
    yearBuilt,
} = Astro.props;

const validCategories = postCategories.filter((categoryName: string) =>
    categories.some((category) => category.name === categoryName),
);
---

<a href={`/properties/${slug}`} class="group">
    <div class="bg-white rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow duration-300" data-aos="fade-up" data-aos-delay={index * 100}>
        <div class="relative">
            <div class="w-full h-64 bg-gray-200 overflow-hidden">
                {featuredImage ? (
                    <Image
                        src={featuredImage}
                        alt={`Primary image of ${title}`}
                        width={600}
                        height={400}
                        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                    />
                ) : (
                    <div class="w-full h-full flex items-center justify-center text-gray-500">No image available</div>
                )}
            </div>
            <div class="absolute top-4 left-4 bg-purple-700 text-white px-3 py-1 rounded-full text-sm">
                For Rent
            </div>
            <div class="absolute bottom-4 right-4 bg-white bg-opacity-90 px-3 py-1 rounded-full text-sm font-medium">
                {bedrooms} bed | {bathrooms} bath | {sqft} sqft
            </div>
        </div>
        <div class="p-6">
            <div class="flex justify-between items-start mb-2">
                <h3 class="text-xl font-bold text-gray-900 group-hover:text-purple-700 transition-colors">{title}</h3>
                <div class="text-xl font-bold text-purple-700">${rent}<span class="text-sm text-gray-500 font-normal">/mo</span></div>
            </div>
            <div class="flex items-center text-gray-600 mb-4">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
                <span class="text-sm truncate">{address}</span>
            </div>
            <div class="flex justify-between items-center">
                <div class="flex items-center">
                    <div class="w-8 h-8 rounded-full bg-gray-200 overflow-hidden mr-2">
                        {agent && agent.image ? (
                            <img src={agent.image} alt={agent.name} class="w-full h-full object-cover" />
                        ) : (
                            <div class="w-full h-full flex items-center justify-center bg-gray-300 text-gray-600">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                </svg>
                            </div>
                        )}
                    </div>
                    <span class="text-sm text-gray-600">{agent ? agent.name : 'Agent'}</span>
                </div>
                <div class="text-sm text-gray-500">{yearBuilt}</div>
            </div>
        </div>
    </div>
</a>
